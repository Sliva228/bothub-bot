#imports & froms
from sys import executable
import discord
import random
from discord import player
from discord.ext import commands, tasks
from discord.components import Button, ButtonStyle
import pafy
import logging
import asyncio
import json
import youtube_dl

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=">", intents=intents)

# –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
intents = discord.Intents.default()
intents.members = True  # –ß—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

# –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å (–±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫)
whitelist = set()

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ YouTubeDL –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏
ytdl_format_options = {
    'format': 'bestaudio/best',
    'outtmpl': '%(extractor)s-%(id)s-%(title)s.%(ext)s',
    'restrictfilenames': True,
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0'  # –ú–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å Replit, –Ω–æ –ø–æ–ø—Ä–æ–±—É–µ–º
}

ffmpeg_options = {'options': '-vn'}

ytdl = youtube_dl.YoutubeDL(ytdl_format_options)


@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")


class YTDLSource(discord.PCMVolumeTransformer):

    def __init__(self, source, *, data, volume=0.5):
        super().__init__(source, volume)

        self.data = data

        self.title = data.get('title')
        self.url = data.get('url')

    @classmethod
    async def from_url(cls, url, *, loop=None, stream=False):
        loop = loop or asyncio.get_event_loop()
        data = await loop.run_in_executor(
            None, lambda: ytdl.extract_info(url, download=not stream))

        if 'entries' in data:
            data = data['entries'][0]

        filename = data['url'] if stream else ytdl.prepare_filename(data)
        return cls(discord.FFmpegPCMAudio(filename, **ffmpeg_options),
                   data=data)


@bot.command(name='play', help='–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –º—É–∑—ã–∫—É –ø–æ URL –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é.')
async def play(ctx, url):
    try:
        async with ctx.typing():
            player = await YTDLSource.from_url(url, loop=bot.loop, stream=True)
            ctx.voice_client.play(player,
                                  after=lambda e: print(f'–û—à–∏–±–∫–∞: {e}')
                                  if e else None)

        await ctx.send(f'–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {player.title}')
    except Exception as e:
        await ctx.send(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {str(e)}')


@bot.command(name='pause', help='–°—Ç–∞–≤–∏—Ç –º—É–∑—ã–∫—É –Ω–∞ –ø–∞—É–∑—É.')
async def pause(ctx):
    if ctx.voice_client.is_playing():
        ctx.voice_client.pause()
        await ctx.send('–ú—É–∑—ã–∫–∞ –Ω–∞ –ø–∞—É–∑–µ.')


@bot.command(name='resume', help='–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏.')
async def resume(ctx):
    if ctx.voice_client.is_paused():
        ctx.voice_client.resume()
        await ctx.send('–ú—É–∑—ã–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞.')


@bot.command(name='skip', help='–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫.')
async def skip(ctx):
    if ctx.voice_client.is_playing():
        ctx.voice_client.stop()
        await ctx.send('–¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω.')


@bot.command(
    name='stop',
    help='–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.'
)
async def stop(ctx):
    await ctx.voice_client.disconnect()
    await ctx.send('–ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.')


@bot.command(name='join', help='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.')
async def join(ctx):
    if not ctx.message.author.voice:
        await ctx.send(
            '–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.'
        )
        return
    channel = ctx.message.author.voice.channel
    await channel.connect()


@bot.command(name='leave', help='–û—Å—Ç–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.')
async def leave(ctx):
    if ctx.voice_client:
        await ctx.guild.voice_client.disconnect()
        await ctx.send('–ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.')
    else:
        await ctx.send('–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.')


@bot.slash_command(name='ping', description='–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞')
async def ping(ctx):
    await ctx.respond("PONG!!!!")


@bot.slash_command(name='pip', description='–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
async def pip(ctx):
    await ctx.send("pip –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º...",
                   file=discord.File("pip.gif"))


@bot.slash_command(name='admins', description='–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
async def admins(ctx):
    await ctx.send(
        "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è: <@530510099509411840> –ò <@612720307156811776>"
    )


# –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
suggestions = []


@bot.slash_command(name="suggest", description="–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
async def suggest(ctx, *, idea):
    embed = discord.Embed(title="–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                          description=idea,
                          color=0x00ff00)
    embed.set_author(name=ctx.author.display_name,
                     icon_url=ctx.author.avatar.url)
    message = await ctx.send(embed=embed)
    await message.add_reaction("üëç")
    await message.add_reaction("üëé")
    suggestions.append(message.id)
    await ctx.respond(
        f"–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.")


@bot.slash_command(name="suggestions",
                   description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
async def list_suggestions(ctx):
    if not suggestions:
        await ctx.respond("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.")
        return

    embed = discord.Embed(title="–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", color=0x00ff00)
    for suggestion_id in suggestions:
        message = await ctx.fetch_message(suggestion_id)
        embed.add_field(name=message.embeds[0].description,
                        value=f"ID: {suggestion_id}",
                        inline=False)

    await ctx.respond(embed=embed)


@bot.slash_command(name="suggestion_result",
                   description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ø–æ ID")
async def suggestion_result(ctx, suggestion_id: int):
    try:
        message = await ctx.fetch_message(suggestion_id)
        reaction_up = discord.utils.get(message.reactions, emoji="üëç")
        reaction_down = discord.utils.get(message.reactions, emoji="üëé")

        upvotes = reaction_up.count - 1  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º –±–æ—Ç
        downvotes = reaction_down.count - 1

        embed = discord.Embed(title="–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
                              description=message.embeds[0].description,
                              color=0x00ff00)
        embed.add_field(name="üëç –ì–æ–ª–æ—Å–æ–≤ –ó–ê:", value=upvotes)
        embed.add_field(name="üëé –ì–æ–ª–æ—Å–æ–≤ –ü–†–û–¢–ò–í:", value=downvotes)

        await ctx.respond(embed=embed)
    except:
        await ctx.respond("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º ID.")


@bot.slash_command(name='mods',
                   description='–ù–∞—à–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–±–æ—Ä–∫–∏ –º–æ–¥–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä')
async def mods(ctx):

    async def check_reaction(reaction, user):
        return user == ctx.author and str(reaction.emoji) in ['1Ô∏è‚É£', '2Ô∏è‚É£']

    message = await ctx.send(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∫ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—à—É —Å–±–æ—Ä–∫—É –º–æ–¥–æ–≤:\n 1Ô∏è‚É£ - Lethal Company \n 2Ô∏è‚É£ - Rounds"
    )
    await message.add_reaction("1Ô∏è‚É£")
    await message.add_reaction("2Ô∏è‚É£")
    try:
        reaction, user = await bot.wait_for('reaction_add',
                                            timeout=60.0,
                                            check=check_reaction)
    except asyncio.TimeoutError:
        await ctx.send('–ü—Ä–æ—à–ª–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.')
    else:
        if str(reaction.emoji) == '1Ô∏è‚É£':
            await ctx.message.delete()
            embed = discord.Embed(
                title="–í–∏–¥–µ–æ —Ç—É—Ç–æ—Ä–∏–∞–ª –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ",
                description=
                "–ù–∞—à–∞ –æ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º–æ–¥–æ–≤ –¥–ª—è **Lethal Company** \n–í–∞—à –∫–æ–¥: 018d94d7-4279-5752-1c0f-b7a766965319 \n C–∫–∞—á–∞—Ç—å Thunderstore Mod Manager \n https://download.overwolf.com/install/Download?ExtensionId=ahpflogoookodlegojjphcjpjaejgghjnfcdjdmi&utm_source=web_app_store",
                colour=0x9402FF,
                url='https://youtu.be/l5Ytn6beTtI',
            )
            await ctx.send(embed=embed)
        elif str(reaction.emoji) == '2Ô∏è‚É£':
            embed = discord.Embed(
                title="–í–∏–¥–µ–æ —Ç—É—Ç–æ—Ä–∏–∞–ª –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ",
                description=
                "–ù–∞—à–∞ –æ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º–æ–¥–æ–≤ –¥–ª—è **Rounds** \n–í–∞—à –∫–æ–¥: 018dc79e-095e-c768-67e6-5204cfa664e1 \n C–∫–∞—á–∞—Ç—å Thunderstore Mod Manager \n https://download.overwolf.com/install/Download?ExtensionId=ahpflogoookodlegojjphcjpjaejgghjnfcdjdmi&utm_source=web_app_store",
                colour=0x9402FF,
                url='https://youtu.be/l5Ytn6beTtI',
            )
            await ctx.send(embed=embed)


@tasks.loop(hours=6)  # –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
async def schedule_random_actions():
    guild = bot.guilds[0]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Å–µ—Ä–≤–µ—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç
    members = [
        member for member in guild.members
        if not member.bot and member.id not in whitelist
        and member.status == discord.Status.online
    ]

    if not members:
        print(
            "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ."
        )
        return

    selected_member = random.choice(members)
    print(f'–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: {selected_member.mention}')

    # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –¥–µ–Ω—å
    await perform_actions_throughout_day(guild, selected_member)


async def perform_actions_throughout_day(guild, member):
    actions = [move_member_to_channel, timeout_member]

    # –£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 6 –¥–æ 10 —Ä–∞–∑)
    num_actions = random.randint(6, 10)

    for _ in range(num_actions):
        action = random.choice(actions)
        await action(guild, member)

        # –£–º–µ–Ω—å—à–∏—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 10 –¥–æ 30 –º–∏–Ω—É—Ç)
        await asyncio.sleep(random.randint(600, 1800)
                            )  # 600 —Å–µ–∫—É–Ω–¥ = 10 –º–∏–Ω—É—Ç, 1800 —Å–µ–∫—É–Ω–¥ = 30 –º–∏–Ω—É—Ç


async def move_member_to_channel(guild, member):
    voice_channel = guild.get_channel(
        123456789012345678)  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if member.voice:
        await member.move_to(voice_channel)
        await send_action_webhook(
            guild,
            f'{member.mention} –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∫–∞–Ω–∞–ª {voice_channel.name}.')


async def timeout_member(guild, member):
    timeout_duration = random.randint(
        300, 900)  # 300 —Å–µ–∫—É–Ω–¥ = 5 –º–∏–Ω—É—Ç, 900 —Å–µ–∫—É–Ω–¥ = 15 –º–∏–Ω—É—Ç
    await member.edit(timed_out_until=discord.utils.utcnow() +
                      discord.utils.timedelta(seconds=timeout_duration))
    await send_action_webhook(
        guild,
        f'{member.mention} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–∞–π–º-–∞—É—Ç –Ω–∞ {timeout_duration // 60} –º–∏–Ω—É—Ç.'
    )


async def send_action_webhook(guild, message):
    channel = guild.get_channel(1132302748898041936)  # ID —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if channel:
        # –°–æ–∑–¥–∞–µ–º –≤–µ–±—Ö—É–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫
        webhook = await channel.create_webhook(name="–ë–æ—Ç")
        await webhook.send(content=message,
                           username="–ù–∞–∫–∞–∑–∞–Ω–∏—è",
                           avatar_url=bot.user.avatar.url)
        await webhook.delete()


@bot.slash_command(
    name="pick_random",
    description="–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç —Å –Ω–∏–º –¥–µ–π—Å—Ç–≤–∏—è")
async def pick_random(ctx):
    guild = ctx.guild
    members = [
        member for member in guild.members
        if not member.bot and member.id not in whitelist
        and member.status == discord.Status.online
    ]

    if not members:
        await ctx.respond(
            "–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ."
        )
        return

    selected_member = random.choice(members)
    await ctx.respond(
        f'–í—ã–±—Ä–∞–Ω {selected_member.mention}. –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.'
    )

    await perform_actions_throughout_day(guild, selected_member)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
@bot.slash_command(name="whitelist_add",
                   description="–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫")
async def whitelist_add(ctx, member: discord.Member):
    if member.id in whitelist:
        await ctx.respond(f'{member.mention} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.')
    else:
        whitelist.add(member.id)
        await ctx.respond(f'{member.mention} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫.')


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
@bot.slash_command(name="whitelist_remove",
                   description="–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞")
async def whitelist_remove(ctx, member: discord.Member):
    if member.id not in whitelist:
        await ctx.respond(f'{member.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.')
    else:
        whitelist.remove(member.id)
        await ctx.respond(f'{member.mention} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞.')


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
@bot.slash_command(name="whitelist_list",
                   description="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫")
async def whitelist_list(ctx):
    if not whitelist:
        await ctx.respond("–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
    else:
        members_in_whitelist = [
            ctx.guild.get_member(member_id) for member_id in whitelist
        ]
        members_mentions = [
            member.mention for member in members_in_whitelist if member
        ]
        await ctx.respond(f'–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: {", ".join(members_mentions)}')


# –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
@bot.slash_command(name="warn",
                   description="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
async def warn(ctx, member: discord.Member, *, reason=None):
    if reason is None:
        reason = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    await member.send(
        f"–í–∞–º –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild.name}. –ü—Ä–∏—á–∏–Ω–∞: {reason}"
    )
    await ctx.respond(
        f"{member.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")


@bot.slash_command(name="clear", description="–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.")
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit=amount)
    await ctx.respond(f"–£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)


# –ú–∏–Ω–∏-–∏–≥—Ä—ã
@bot.slash_command(name="coinflip", description="–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É.")
async def coinflip(ctx):
    result = random.choice(["–û—Ä–µ–ª", "–†–µ—à–∫–∞"])
    await ctx.respond(f"–ú–æ–Ω–µ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞–ª–∞: {result}")


@bot.slash_command(name="dice", description="–ë—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫.")
async def dice(ctx, sides: int = 6):
    if sides < 1:
        await ctx.respond("–ß–∏—Å–ª–æ –≥—Ä–∞–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
        return
    result = random.randint(1, sides)
    await ctx.respond(f"–ö—É–±–∏–∫ –ø–æ–∫–∞–∑–∞–ª: {result}")


@bot.slash_command(name="rps", description="–ò–≥—Ä–∞ '–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞'.")
async def rps(ctx, choice: str):
    choices = ["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"]
    if choice.capitalize() not in choices:
        await ctx.respond("–í—ã–±–µ—Ä–∏—Ç–µ –ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –ë—É–º–∞–≥—É.")
        return

    bot_choice = random.choice(choices)
    result = ""
    if bot_choice == choice.capitalize():
        result = "–ù–∏—á—å—è!"
    elif (bot_choice == "–ö–∞–º–µ–Ω—å" and choice.capitalize() == "–ù–æ–∂–Ω–∏—Ü—ã") or \
         (bot_choice == "–ù–æ–∂–Ω–∏—Ü—ã" and choice.capitalize() == "–ë—É–º–∞–≥–∞") or \
         (bot_choice == "–ë—É–º–∞–≥–∞" and choice.capitalize() == "–ö–∞–º–µ–Ω—å"):
        result = "–ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!"
    else:
        result = "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!"

    await ctx.respond(f"–ë–æ—Ç –≤—ã–±—Ä–∞–ª {bot_choice}. {result}")


# –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä –∑–∞–¥–∞—á

challenges = [
    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å 10 —Ä–∞–∑–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏.",
    "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –Ω–∞ 5 –º–∏–Ω—É—Ç.",
    "–°–æ–∑–¥–∞–π—Ç–µ –æ–ø—Ä–æ—Å —Å –º–∏–Ω–∏–º—É–º 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞.",
    "–ü–æ—Å—Ç–∞–≤—å—Ç–µ –ª–∞–π–∫ –Ω–∞ 5 —Ä–∞–∑–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."
]


@bot.slash_command(name="challenge", description="–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ.")
async def challenge(ctx):
    challenge = random.choice(challenges)
    await ctx.respond(f"–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ: {challenge}")


@bot.slash_command(name="challenges",
                   description="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π.")
async def list_challenges(ctx):
    embed = discord.Embed(title="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è", color=0x00ff00)
    for idx, challenge in enumerate(challenges, 1):
        embed.add_field(name=f"–ó–∞–¥–∞–Ω–∏–µ {idx}", value=challenge, inline=False)
    await ctx.respond(embed=embed)


bot.run(
    "MTIwNTIxNTgzNzYyODI2ODU0NQ.G44Kr9.1c0dgaFUkKz6PSCbSu3ZQKWFALKwXG2-oLyZao")
